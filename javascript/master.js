// [AIV_SHORT]  Build version: 0.0.37 - Tuesday, April 28th, 2020, 11:03:47 PM  
 !function(t){var e={};function i(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,o){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(o,r,function(e){return t[e]}.bind(null,r));return o},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e){function i(t,e){void 0===e&&(e=[]);var i="";for(var o in e)i+=","+o.toString();i=i.substring(1),console.log(t+"("+i+")")}new(function(){function t(t,e,o){i("Minesweeper Constructor",[t,e,o]),this.mode=1,this.rows=t,this.cols=e,this.mines=o,this.field=[],this.game_wrapper=document.getElementById("game");for(var r=0,n=0,s=this.mines;n<this.rows;){for(;r<this.cols;){var l=!1;s>0&&(this.randomBool(33)||this.rows*this.cols-(n*this.rows+r)===s)&&(l=!0,s--),this.field.push({x:r,y:n,mine:l,searched:!1});var c=document.createElement("div");c.classList.add("block"),c.setAttribute("data-x",r.toString()),c.setAttribute("data-y",n.toString()),this.game_wrapper.appendChild(c),r++}r=0,n++}this.setupEventHandlers()}return t.prototype.randomBool=function(t){return void 0===t&&(t=50),!!(100*Math.random()<=t)},t.prototype.setupEventHandlers=function(){for(var t=this,e=document.querySelectorAll(".block"),i=0;i<e.length;)e[i].addEventListener("click",(function(e){t.clickedBlock(e)})),i++},t.prototype.clickedBlock=function(t){i("clickedBlock");t.target;var e=this.getTileId(parseInt(t.target.getAttribute("data-x")),parseInt(t.target.getAttribute("data-y")));if(this.selectedTile=this.field[e],1===this.mode){if(this.selectedTile.mine)return void this.clickedMine();t.target.innerHTML=this.searchSurroundingTiles(e).toString()}},t.prototype.getTileId=function(t,e){return e*this.rows+t},t.prototype.clickedMine=function(){i("clickedMine"),alert("You Lose!")},t.prototype.searchSurroundingTiles=function(t){i("searchSurroundingTiles");var e=0;return t%this.cols!=0&&this.field[t-1].mine&&e++,t%this.cols!=this.cols-1&&this.field[t+1].mine&&e++,t>this.cols&&(this.field[t-this.cols].mine&&e++,t%this.cols!=0&&this.field[t-this.cols-1].mine&&e++,t%this.cols!=this.cols-1&&this.field[t-this.cols-1].mine&&e++),t<this.rows*this.cols-this.cols&&(this.field[t+this.cols].mine&&e++,t%this.cols!=0&&this.field[t+this.cols-1].mine&&e++,t%this.cols!=this.cols-1&&this.field[t+this.cols+1].mine&&e++),e},t}())(10,10,30)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64, 